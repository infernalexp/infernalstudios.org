/* eslint-disable no-undef */

function preloadImage(url) {
  const img = new Image();
  img.src = url;
}

const mods = [
  {
    name: "Infernal Expansion",
    urlIdentifier: "infernalexpansion",
    logo: "/img/infernal-expansion-logo.webp",
  },
  {
    name: "Mining Master",
    urlIdentifier: "miningmaster",
    logo: "/img/mining-master-logo.webp",
  },
  {
    name: "Food Effects",
    urlIdentifier: "foodeffects",
    logo: "/img/food-effects-logo.webp",
  },
  {
    name: "Second Chance",
    urlIdentifier: "secondchanceforge",
    logo: "/img/second-chance-logo.webp",
  },
  {
    name: "Neko's Enchanted Books",
    urlIdentifier: "nebs",
    logo: "/img/nekos-enchanted-books-logo.webp",
  },
  {
    name: "Celestial Config",
    urlIdentifier: "celestialconfig",
    logo: "/img/celestial-config-logo.webp",
  },
  {
    name: "Elytra Bounce",
    urlIdentifier: "elytrabounce",
    logo: "/img/elytra-bounce-logo.webp",
  },
  {
    name: "Shield Expansion",
    urlIdentifier: "shieldexpansion",
    logo: "/img/shield-expansion-logo.webp",
  },
  {
    name: "Enemy Expansion",
    urlIdentifier: "enemyexpansion",
    logo: "/img/enemy-expansion-logo.webp",
  },
  {
    name: "Json Entity Models",
    urlIdentifier: "jsonentitymodels",
    logo: "/img/json-entity-models-logo.webp",
  },
  {
    name: "Advancement Based Spawning",
    urlIdentifier: "advancementbasedspawning",
    logo: "/img/advancement-based-spawning-logo.webp",
  },
  null,
  {
    name: "Way More Waystones",
    urlIdentifier: "waymorewaystones",
    logo: "/img/way-more-waystones-cs-logo.webp",
    disable: ["curseforge", "modrinth"],
  },
  {
    name: "Everything Descriptions",
    urlIdentifier: "everythingdescriptions",
    logo: "/img/everything-descriptions-cs-logo.webp",
    disable: ["curseforge", "modrinth"],
  },
  null,
  {
    name: "Resurvival",
    urlIdentifier: "resurvival",
    logo: "/img/resurvival-logo.webp",
    disable: ["github", "modrinth"],
  },
];

for (let i = 0; i < mods.length; i++) {
  if (mods[i] === null) continue;
  preloadImage(mods[i].logo);
}

const patreonBannerImgs = [
  "/img/patreon-banner-textless-1.webp",
  "/img/patreon-banner-textless-2.webp",
  "/img/patreon-banner-textless-3.webp",
];

for (let i = 0; i < patreonBannerImgs.length; i++) {
  preloadImage(patreonBannerImgs[i]);
}
preloadImage("/img/patreon-logo.webp");

// Mods list
window.addEventListener("DOMContentLoaded", () => {
  const modContainer = document.getElementById("mod-container");
  modContainer.innerHTML = "<!-- The following code inside this element is generated by a script -->";

  /** @type {HTMLDivElement} */
  let modContainerDiv;
  for (let i = 0; i < mods.length; i++) {
    if (mods[i] === null || !modContainerDiv) {
      modContainerDiv = document.createElement("div");
      modContainerDiv.classList.add("columns", "col-9", "col-mx-auto");
      modContainer.appendChild(modContainerDiv);
      if (mods[i] === null) continue;
    }

    const modElement = document.createElement("div");
    modElement.classList.add("column", "col-4", "px-2", "col-lg-auto", "col-mx-auto", "align-middle");
    const mod = mods[i];
    mod.disable ??= [];

    let modHTML = `
      <h4>
        <img alt="${mod.name} Logo" class="mod-logo" src="${mod.logo}" />
      </h4>
      <h4 class="text-center">
        <ul class="breadcrumb breadcrumb-equal">`;

    if (!mod.disable.includes("curseforge"))
      modHTML += `<li class="breadcrumb-item">
        <a href="/${mod.urlIdentifier}/curseforge">CurseForge</a>
      </li>`;

    if (!mod.disable.includes("modrinth"))
      modHTML += `<li class="breadcrumb-item">
        <a href="/${mod.urlIdentifier}/modrinth">Modrinth</a>
      </li>`;

    if (!mod.disable.includes("github"))
      modHTML += `<li class="breadcrumb-item">
        <a href="/${mod.urlIdentifier}/github">GitHub</a>
      </li>`;

    modHTML += `</ul></h4>`;

    modElement.innerHTML = modHTML;
    modContainerDiv.appendChild(modElement);
  }
});

// Patreon banner
window.addEventListener("DOMContentLoaded", () => {
  /** @type {HTMLDivElement} */
  const bannerContainer = document.getElementById("patreon-banner");

  const bannerImg = new Image();
  bannerImg.classList.add("banner-bg");
  bannerImg.src = patreonBannerImgs[Math.floor(Math.random() * patreonBannerImgs.length)];

  // We want the img to be first in the html
  bannerContainer.insertBefore(bannerImg, bannerContainer.firstChild);

  bannerContainer.addEventListener("click", () => {
    window.location.href = "/patreon";
  });
});
